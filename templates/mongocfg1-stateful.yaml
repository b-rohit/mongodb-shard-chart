apiVersion: {{ default "extensions/v1beta1" .Values.deploymentApiVersion }}
kind: StatefulSet
metadata:
  annotations:
  labels:
    app: "{{ .Values.configsvr.name }}"
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
    release: {{ .Release.Name }}
    service: "{{ .Values.configsvr.service.name }}"
  name: "{{ .Values.configsvr.service.name }}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "{{ .Values.configsvr.name }}"
      track: "{{ .Values.application.track }}"
      tier: "{{ .Values.application.tier }}"
      release: {{ .Release.Name }}
      service: "{{ .Values.configsvr.service.name }}"
  serviceName: "{{ .Values.configsvr.service.name }}"
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        app: "{{ .Values.configsvr.name }}"
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
        release: {{ .Release.Name }}
        service: "{{ .Values.configsvr.service.name }}"
      name: "{{ .Values.configsvr.service.name }}"
    spec:
      volumes:
      - name: datadir
        emptyDir: {}
      - name: init
        configMap:
          defaultMode: 0755
          name: mongodb-configmap-init
      containers:
      - name: "{{ .Values.configsvr.service.name }}"
        image: {{ .Values.common.image }}
        env:
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: datadir
          mountPath: /data/db 
        - name: init
          mountPath: /init
        command: ["/bin/bash","-c"]
        args:
        - source /init/on-start.sh "cfg1";
        env:
        - name: KEYFILE
          valueFrom:
            secretKeyRef:
              name: {{.Release.Name}}
              key: keyfile
      restartPolicy: Always
      enableServiceLinks: false